<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
<!-- 	spring 내에서 어노테이션을 사용하기 위함 단, scan 안에 이 설정이 존재하기 때문에 컴포넌트 스캔이 있으면 없어도 됨 -->
	<context:annotation-config />
<!-- 	자동으로 한번 다 스캔해서 bean으로 등록, 안하면 class를 찾지 못함 -->
<!-- 	use-default-filters - true가 기본값 - bean 등록 -->
	<context:component-scan base-package="kr.or.ddit.case1" use-default-filters="false">
<!-- 	모든 어노테이션 등록 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
<!-- 	단 Service는 등록하지 않음 -->
<!-- 		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/> -->
	</context:component-scan>

<!-- 어노테이션 기반의 자동 주입 구조
	1. 어노테이션 포스트 프로세서가 등록되어야 함 : <context:annotation-config/>
	2. 특정 영역의 클래스 중 일정 조건을 만족하는 경우, bena으로 등록시켜야 함 : <context:component-scan base-package=""/>
		컴퓨터에게 주석의 종류는 상관없이 똑같이 bean으로 등록시킴
		@Component	: 나머지 어노테이션에서 공통 적용된 메타 어노테이션으로 컴포넌트 스캐너에서 유일하게 스캔하는 대상
		@Repository	: dao
		@Service	: service
		@Controller	: controller에 사용하고, (컨테이너에 등록되면서 동시에 handler mapping에 의해 수집됨)
		
		@Configuration
		
		- web 환경에서만 사용가능
		@RestController
		@ControllerAdvice
		@RestControllerAdvice 
		
		주입을 비롯한 bean의 구체적 설정을 변경할 때 사용되는 어노테이션
		@AutoWired	: 주입에 사용됨(타입 기준 주입) - Gun과 같이 내부에 클래스가 2개인 경우 사용이 불가
		@Inject == @AutoWired : 단, dependency로 설정해 주어야 함
		@Resource(name or id) : 주입에 사용됨(주입 기준을 동적으로 설정할 수 있음)
		@Required
		@PostConstruct : 객체 생성 후, 주입 후
		@PreDestroy
		-->	
</beans>
